#!/usr/bin/env -S deno run --allow-all
import { bundle, stop } from "../main/generic_helpers/bundle.js"
import { toImportJsAsString } from "../main/generic_helpers/toImportJsAsString.js"
import { FileSystem } from "https://deno.land/x/quickr@0.8.6/main/file_system.js"
import { pureBinaryify } from "https://deno.land/x/binaryify@2.5.6.1/tools.js"
import { binaryify } from "https://deno.land/x/binaryify@2.5.6.1/binaryify_api.js"

const bundleTargetDir = `${FileSystem.thisFolder}/../autogenerated/bundles`
await FileSystem.ensureIsFolder(bundleTargetDir)

// 
// esbuild.wasm.binaryified.js
// 
console.log(`building esbuild.wasm.binaryified.js`)
await binaryify({
    pathToBinary: `${FileSystem.thisFolder}/../main/vendored/esbuild.wasm`,
    pathToBinarified: `${bundleTargetDir}/esbuild.wasm.binaryified.js`,
    disableSelfUpdating: false, // default is false
    forceExportString: false,
})

// 
// nullEnv.js
// 
console.log(`building nullEnv.js`)
const nullEnvFunctionPath = `${FileSystem.thisFolder}/../main/nullEnv.js`
await FileSystem.write({
    path:`${bundleTargetDir}/nullEnv.bundle.js`,
    data: await bundle(nullEnvFunctionPath),
    overwrite: true
})
await FileSystem.write({
    path:`${bundleTargetDir}/nullEnv.binaryify.js`,
    data: await toImportJsAsString(nullEnvFunctionPath),
    overwrite: true
})

// 
// enforceNullEnv.js
// 
console.log(`building enforceNullEnv.js`)
await FileSystem.write({
    path:`${bundleTargetDir}/enforceNullEnv.binaryify.js`,
    data: await toImportJsAsString(`${FileSystem.thisFolder}/../main/enforceNullEnv.js`),
    overwrite: true
})
await stop()